version: "3.6"

services:
  cloudflared:
    build: ./cloudflare
    # Restart on crashes and on reboots
    restart: unless-stopped
    # Attach cloudflared only to the private network
    networks:
      internal:
        ipv4_address: 172.30.9.2

  pihole:
    container_name: pihole
    restart: unless-stopped
    image: pihole/pihole
    env_file: piehole.env
    environment:
      - "TZ=${TZ}"
      - "WEBPASSWORD=${PASSWORD}"

      # Internal IP of the cloudflared container
      - "DNS1=172.30.9.2#5053"

      # Explicitly disable a second DNS server, otherwise Pi-hole uses Google
      - "DNS2=no"

      # Listen on all interfaces and permit all origins
      # This allows Pihole to work in this setup and when answering across VLANS,
      # but do not expose pi-hole to the internet!
      - "DNSMASQ_LISTENING=all"

    # Persist data and custom configuration to the host's storage
    volumes:
      - pihole_data:/etc/pihole/
      - dnsmasq_data:/etc/dnsmasq.d/

    # 1. Join the internal network so Pi-hole can talk to cloudflared
    # 2. Join the public network so it's reachable by systems on our LAN
    networks:
      internal:
        ipv4_address: 172.30.9.3
      priv_lan:
        ipv4_address: 192.168.1.200

    # Starts cloudflard before Pi-hole
    depends_on:
      - cloudflared

networks:
  # Create the internal network
  internal:
    ipam:
      config:
        - subnet: 172.30.9.0/29

  # The priv_lan network is already setup, so it is an 'external' network
  priv_lan:
    external:
      name: priv_lan

volumes:
  pihole_data:
    external: true
  dnsmasq_data:
    external: true
